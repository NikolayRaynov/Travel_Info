@model Travel_Info.Web.ViewModels.Review.EditReviewViewModel

@{
    ViewData["Title"] = "Edit Review";
}

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="DestinationId" />

    <div class="form-group">
        <label asp-for="Rating" class="control-label"></label>
        <div class="rating-stars">
            @for (int i = 5; i >= 1; i--)
            {
                <input type="radio" id="star-@i" name="Rating" value="@i" @(Model.Rating == i ? "checked" : "") />
                <label for="star-@i" class="star">&#9733;</label>
            }
        </div>
        <span asp-validation-for="Rating" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Comment" class="control-label mb-2"></label>
        <textarea asp-for="Comment" class="form-control" rows="4" required>@Model.Comment</textarea>
        <span asp-validation-for="Comment" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary">Update Review</button>
        <a asp-controller="Destination" asp-action="Details" asp-route-id="@Model.DestinationId" class="btn btn-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <style>
        .rating-stars {
            display: flex;
            flex-direction: row-reverse;
            justify-content: flex-end;
        }
        .rating-stars input {
            display: none;
        }
        .rating-stars label {
            font-size: 2rem;
            color: gray;
            cursor: pointer;
        }
        .rating-stars input:checked ~ label,
        .rating-stars label:hover,
        .rating-stars label:hover ~ label {
            color: gold;
        }
    </style>
}